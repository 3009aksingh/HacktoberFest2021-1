#include <bits/stdc++.h>
using namespace std;

class Solution{
public:
	void merge(int arr1[], int arr2[], int n, int m) {
	 
	    int i=0,j=0;
	    for(int gap=ceil((n+m)/2.0); gap>=1;  gap=(gap==1)? 0: ceil(gap/2.0))
	    {
	        for(i=0; i+gap<n; i++)
	        if(arr1[i] > arr1[i+gap])
	            swap(arr1[i],arr1[i+gap]);
	            
	            if(gap>n)
	            {
	            for(j=gap-n; i<n && j<m ; i++,j++)
	            if(arr1[i]>arr2[j])      swap(arr1[i],arr2[j]);
	       
	            }
	            else
	            {
	                for(j=0; i<n && j<m; i++, j++)
	                    if(arr1[i]>arr2[j])      swap(arr1[i],arr2[j]);
	            }
	            
	            for(j=0;j+gap<m;j++)
	            if(arr2[j]>arr2[j+gap]) 
	                swap(arr2[j],arr2[j+gap]);
	    }
	}
};
int main() {
    int t;
    cin >> t;
    while (t--) {
        int n, m, i;
        cin >> n >> m;
        int arr1[n], arr2[m];
        for (i = 0; i < n; i++) {
            cin >> arr1[i];
        }
        for (i = 0; i < m; i++) {
            cin >> arr2[i];
        }
        Solution ob;
        ob.merge(arr1, arr2, n, m);
        for (i = 0; i < n; i++) {
            cout << arr1[i] << " ";
        }
        for (i = 0; i < m; i++) {
            cout << arr2[i] << " ";
        }
        cout << "\n";
    }
    return 0;
}
